{"version":3,"sources":["assets/images/watercolor-background.png","redux/userSlice.js","redux/classSlice.js","components/LoginSignupPages/AlertBox.js","components/LoginSignupPages/WatercolorBackground.js","components/LoginSignupPages/LoginJumbotron.js","components/LoginSignupPages/Login.js","components/LoginSignupPages/Signup.js","components/Home.js","components/FourOhFour.js","components/ProtectedRoute.js","components/LoginStatus.js","App.js","redux/store.js","index.js"],"names":["userSlice","createSlice","name","initialState","currentUser","reducers","setCurrentUser","state","action","payload","selectCurrentUser","user","actions","classSlice","classes","loadingClasses","setClasses","selectClasses","class","selectLoadingClasses","AlertBox","props","useState","opacity","setOpacity","styles","div","boxShadow","margin","useEffect","message","style","WatercolorBackground","src","require","position","width","left","transform","marginTop","alt","LoginJumbotron","className","Typography","variant","Login","username","setUsername","password","setPassword","setMessage","redirect","setRedirect","history","useHistory","dispatch","useDispatch","useSelector","console","log","handleSubmit","event","preventDefault","axios","post","then","data","get","to","catch","err","Error","error","onSubmit","formRow","TextField","label","onChange","target","value","type","Button","onClick","color","push","href","Signup","loading","Container","Grid","placeholder","Home","align","gutterBottom","Axios","FourOhFour","ProtectedRoute","onFailureRedirectToPath","isLoading","rest","height","LoginStatus","loginStatus","setLoginStatus","logout","Paper","elevation","withStyles","form","display","alignItems","justifyContent","setLoading","exact","path","configureStore","reducer","classReducer","userReducer","ReactDOM","render","StrictMode","store","document","getElementById"],"mappings":"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","file":"static/js/main.ca8be00f.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/watercolor-background.73882de6.png\";","import { createSlice } from '@reduxjs/toolkit';\n\nexport const userSlice = createSlice({\n  name: 'user',\n  initialState: {\n    currentUser: null\n  },\n  reducers: {\n    setCurrentUser: (state, action) => {\n      // This is set by the login and logout functions. currentUser is the username.\n      state.currentUser = action.payload;\n    }\n  }\n});\n\nexport const selectCurrentUser = state => state.user.currentUser;\n\nexport const { setCurrentUser } = userSlice.actions\n\nexport default userSlice.reducer;","import { createSlice } from '@reduxjs/toolkit';\n\n// the classes object, from the withStyles object created in App.js\n// loadingClasses ensures that App.js will not render anything until the classes is no longer null\nexport const classSlice = createSlice({\n  name: 'class',\n  initialState: {\n    classes: null,\n    loadingClasses: true\n  },\n  reducers: {\n    setClasses: (state, action) => {\n      state.classes = action.payload;\n      state.loadingClasses = false;\n    }\n  }\n});\n\nexport const selectClasses = state => state.class.classes;\nexport const selectLoadingClasses = state => state.class.loadingClasses;\n\nexport const { setClasses } = classSlice.actions\n\nexport default classSlice.reducer;","import React, { useState, useEffect } from \"react\";\n\nfunction AlertBox(props) {\n  const [opacity, setOpacity] = useState(0)\n\n  let styles = {\n    div: {\n      'borderColor' : 'black',\n      'borderWidth' : '2px',\n      'borderRadius': '5px',\n      'backgroundColor': 'rebeccapurple',\n      'padding': '10px',\n      'color' : 'antiquewhite',\n      boxShadow:'0px 2px 8px grey',\n      opacity: opacity,\n      margin: '2px'\n    }\n  }\n\n  // makes alert box transparent when empty. Makes alert box appear if there is a message.\n  useEffect(() => {\n    if (props.message !== '') {\n      setOpacity(1)\n    }\n    if (props.message === '') {\n      setOpacity(0);\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [props.message]);\n\n  return(\n    <div style={styles.div}>\n      {props.message}\n    </div>\n  )\n}\n\nexport default AlertBox;","import React from 'react'\n\nexport default function WatercolorBackground() {\n\n  let styles = {\n    waterBg: {\n      position: 'absolute',\n      width: '50%',\n      left: '50%',\n      transform: 'translateX(-50%)',\n      marginTop: '-2em'\n    }\n  }\n  return (<>\n    <img src={require('../../assets/images/watercolor-background.png')} style={styles.waterBg} alt='watercolor' />\n  </>)\n}","import React from 'react';\nimport Typography from '@material-ui/core/Typography'\n\nexport default function LoginJumbotron() {\n  return (\n    <div className='login-jumbotron'>\n        <Typography variant='h1' className='login-title'>Welcome</Typography>\n    </div>\n  )\n}","import React, { useState, useEffect } from \"react\";\nimport { Button, Container, Grid, TextField } from '@material-ui/core';\nimport AlertBox from './AlertBox';\nimport { useHistory } from \"react-router-dom\";\nimport axios from 'axios';\nimport WatercolorBackground from \"./WatercolorBackground\";\nimport { setCurrentUser } from '../../redux/userSlice';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectClasses } from '../../redux/classSlice';\nimport { Redirect } from 'react-router-dom';\nimport LoginJumbotron from './LoginJumbotron';\n\nfunction Login() {\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [message, setMessage] = useState(\"\");\n  const [redirect, setRedirect] = useState(<></>);\n  const history = useHistory();\n  const dispatch = useDispatch();\n  const classes = useSelector(selectClasses);\n\n  useEffect(() => {\n    console.log(classes);\n  }, [classes])\n\n  let handleSubmit = (event) => {\n    event.preventDefault();\n    if (username === '' || password === '') {\n      setMessage(\"Neither username nor password may be blank.\");\n    }\n    else {\n      let user = {\n        username: username,\n        password: password\n      }\n      // attempt to log in with username and password\n      axios.post(`/api/login`, user).then((data) => {\n        // if successful, get all related user data\n        axios.get(\"/api/userdata\").then(({ data }) => {\n          // set the user data in the redux store\n          if (data) {\n            dispatch(setCurrentUser(data))\n          }\n        }).then(() => {\n          // finally, go to '/'. Can also use: history.push(\"/\");\n          setRedirect(<Redirect to='/'></Redirect>)\n        }).catch((err) => {\n          throw new Error(err)\n        })\n      }).catch((err) => {\n        if (err.message === \"Request failed with status code 401\") {\n          setMessage(\"Incorrect username or password.\");\n        } else {\n          console.error(err);\n        }\n      })\n    }\n  }\n\n  let goToSignup = (event) => {\n    event.preventDefault();\n    history.push('/signup')\n  }\n\n  // sets alert box message back to blank whenever username or password fields are edited\n  useEffect(() => {\n    if (message !== \"\") {\n      setMessage(\"\");\n    }\n    // dependency should not include message, otherwise it would always be set to blank\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [username, password])\n\n  // button to log in with preset username and pass\n  const devLogin = () => {\n    axios.post(`/api/login`, { username: \"1\", password: \"111111\" }).then(data => {\n      axios.get(\"/api/userdata\").then(({ data }) => {\n        // set the user data in the redux store\n        if (data) {\n          dispatch(setCurrentUser(data))\n        }\n      }).then(() => {\n        setRedirect(<Redirect to='/'></Redirect>)\n      }).catch((err) => {\n        throw new Error(err)\n      })\n    }).catch((err) => {\n      if (err.message === \"Request failed with status code 401\") {\n        setMessage(\"Incorrect username or password.\");\n      } else {\n        console.error(err);\n      }\n    })\n  };\n\n  return (<>\n    {redirect}\n    <LoginJumbotron />\n    <WatercolorBackground />\n    <form onSubmit={handleSubmit}>\n      <div className={classes.formRow} >\n        <TextField\n          label=\"Username\"\n          name='username'\n          onChange={(event) => setUsername(event.target.value)}\n          type=\"text\"\n        />\n      </div>\n\n      <div className={classes.formRow} >\n        <TextField\n          label='Password'\n          onChange={(event) => setPassword(event.target.value)}\n          type=\"password\"\n          name='password'\n        />\n      </div>\n      <div className={classes.formRow} >\n\n        <Button onClick={handleSubmit} variant=\"contained\" color='primary' type=\"submit\">\n          Log In\n            </Button>\n      </div>\n      <div className={classes.formRow} >\n\n        <Button onClick={goToSignup} variant=\"contained\" color='secondary'>\n          Sign Up Form\n            </Button>\n      </div>\n      <div className={classes.formRow} >\n\n        <AlertBox\n          message={message}\n        />\n      </div>\n\n      <div className={classes.formRow} >\n\n        {/* Button for easily logging in, after running seed.js. Comment this code out for production deployment. */}\n        <Button variant='outlined' onClick={devLogin}>\n          Dev Login for protected route\n        </Button>\n      </div>\n      <br />\n      <div className={classes.formRow} >\n\n        {/* Link to a page that can be accessed whether logged in or not, but changes depending on login status. */}\n        <a href='/loginstatus'>Go to page dependent on login status</a>\n      </div>\n    </form>\n  </>)\n}\n\nexport default Login;","import React, { useState, useEffect } from \"react\";\nimport { Button, Container, Grid, TextField } from '@material-ui/core';\nimport AlertBox from './AlertBox';\nimport axios from 'axios';\nimport { Redirect } from \"react-router-dom\"\nimport { useHistory } from \"react-router-dom\";\nimport WatercolorBackground from \"./WatercolorBackground\";\nimport LoginJumbotron from './LoginJumbotron';\n\nfunction Signup({ loading, user }) {\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [message, setMessage] = useState(\"\");\n  const history = useHistory();\n\n  let handleSubmit = (event) => {\n    event.preventDefault();\n\n    if (username === '' || password === '') {\n      setMessage(\"Neither username nor password may be blank.\")\n    }\n    else {\n      let user = {\n        username: username,\n        password: password\n      }\n\n      axios.post('api/users', user).then(data => {\n        if (data.data === \"That username already exists!\") {\n          setMessage(data.data);\n        }\n        else if (data.data === \"Password must be at least 6 characters.\") {\n          setMessage(data.data);\n        }\n        else {\n          // window.location.href = '/login';\n          history.push('/login');\n        }\n      }).catch(err => {\n        console.error(err);\n        setMessage(\"Signup unsuccessful, unknown error.\")\n      })\n    }\n  }\n\n  let goToLogin = (event) => {\n    event.preventDefault();\n    // window.location.replace(\"/login\")\n    history.push('/login');\n  }\n\n  // sets alert box message back to blank whenever username or password fields are edited\n  useEffect(() => {\n    if (message !== \"\") {\n      setMessage(\"\");\n    }\n    // dependency should not include message, otherwise it would always be set to blank\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [username, password])\n\n  return ((user && !loading) ? <Redirect to=\"/home\" /> :\n    <>\n      <LoginJumbotron />\n      <WatercolorBackground />\n      <Container className='loginSignupContainer'>\n\n        <form>\n            <Grid></Grid>\n            <Grid>\n                <TextField\n                  label=\"Username\"\n                  name='username'\n                  onChange={(event) => setUsername(event.target.value)}\n                  type=\"text\"\n                  placeholder=\"\"\n                />\n            </Grid>\n            <Grid></Grid>\n\n\n            <Grid></Grid>\n            <Grid>\n                <TextField\n                  label='Password'\n                  onChange={(event) => setPassword(event.target.value)}\n                  type=\"password\"\n                  placeholder=\"password\"\n                  name='password'\n                />\n            </Grid>\n            <Grid></Grid>\n\n            <Grid></Grid>\n            <Grid>\n              <Button className='signupLoginBtns' onClick={handleSubmit} variant=\"contained\" color='secondary' type=\"submit\">\n                Sign up\n              </Button>\n            </Grid>\n            <Grid></Grid>\n\n            <Grid></Grid>\n            <Grid>\n              <Button className='signupLoginBtns' onClick={goToLogin} variant=\"contained\" color='primary' type=\"submit\">\n                Go to Log In Form\n              </Button>\n            </Grid>\n            <Grid></Grid>\n\n            <Grid></Grid>\n            <Grid>\n              <AlertBox\n                message={message}\n              />\n            </Grid>\n            <Grid></Grid>\n\n        </form>\n      </Container>\n    </>\n  )\n}\n\nexport default Signup;","import React from 'react';\nimport Axios from 'axios';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { setCurrentUser } from '../redux/userSlice';\nimport { Typography, Button } from '@material-ui/core'\nimport { selectClasses } from '../redux/classSlice';\n\nexport default function Home() {\n  const dispatch = useDispatch();\n  const classes = useSelector(selectClasses);\n\n  const logout = () => {\n    Axios.get('api/logout').then(() => {\n      // reloading the page with \"window.location.reload()\" also works, since the initial user state is retrieved from the store upon page load\n      dispatch(setCurrentUser(null));\n      // window.location.reload();\n    })\n  }\n\n  return (\n    <>\n      <Typography variant='h3' align='center' gutterBottom>\n        This page is protected by ProtectedRoute.js, and is only reachable when logged in.\n      </Typography>\n      <div className={classes.formRow} >\n        <Button variant='outlined' color='primary' onClick={logout}>log out</Button>\n      </div>\n    </>\n  )\n}","import React from 'react';\n\nexport default function FourOhFour() {\n\n  return(\n    <h1 className='four-oh-four'>\n      404: Page Not Found!\n    </h1>\n  )\n}","import React from \"react\";\nimport { Redirect, Route } from \"react-router-dom\";\nimport ReactLoading from \"react-loading\";\n\n/** Returns loading animation if loading is true (from App.js) and user is still being loaded.\n * Returns child route (in App.js) if loading is done and user is logged in.\n * Protected route redirects to /login, rather than child route, if user is not logged in. */\nconst ProtectedRoute = ({\n  onFailureRedirectToPath = \"/login\",\n  isLoading,\n  user,\n  ...rest\n}) => {\n    return isLoading ? (\n      // loading animation component\n      <>\n        <div className='loading'>\n          <div className='loading-bottom'>\n            <div className='loading-bars'>\n              <ReactLoading color=\"rgb(180, 180, 180)\" height={200} width={200} type=\"cubes\" />\n            </div>\n          </div>\n        </div>\n      </>\n    ) : user ? (\n      <Route {...rest} />\n    ) : (\n      <Redirect to={onFailureRedirectToPath} />\n    );\n  };\n\n\n  /* For testing the loading screen code, return the code below instead, which will just return loading screen forever. */\n//   return (<>\n//     <div className='loading'>\n//       <div className='loading-bottom'>\n//         <div className='loading-bars'>\n//           <ReactLoading color=\"rgb(180, 180, 180)\" height={200} width={200} type=\"cubes\" />\n//         </div>\n//       </div>\n//     </div>\n//   </>)\n// }\n\nexport default ProtectedRoute;","import Axios from 'axios';\nimport React, { useState, useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { setCurrentUser, selectCurrentUser } from '../redux/userSlice';\nimport { Paper, Button, Typography } from '@material-ui/core';\nimport { selectClasses } from '../redux/classSlice';\n\n// This page can be reached whether logged in or not, but will display different contents depending on login status.\nexport default function LoginStatus(props) {\n  const [loginStatus, setLoginStatus] = useState();\n  const dispatch = useDispatch();\n  let currentUser = useSelector(selectCurrentUser);\n  const classes = useSelector(selectClasses);\n\n  const logout = () => {\n    Axios.get('api/logout').then(() => {\n      dispatch(setCurrentUser(null));\n      // reloading the page with window.location.reload() also works to log the user out, since the initial null user value is retrieved from the store upon page load\n    }).catch(err => { console.error(err) })\n  }\n\n  // upon login status change, conditionally render home page\n  useEffect(() => {\n    if (currentUser) {\n      // console.log(userInfo);\n      setLoginStatus(\n        <Paper elevation={3} className='home'>\n          <Typography variant='body1' className='paper-p' >\n            You are logged in as user \"{currentUser.username}\".\n          </Typography>\n          <Button variant='contained' onClick={logout}>log out</Button>\n        </Paper>\n      )\n    } else {\n      setLoginStatus(\n        <Paper className='home'>\n          <Typography variant='body1' className='paper-p' >\n            You are not logged in.\n          </Typography>\n          <Typography variant='body1' className='paper-p' >\n            <a href='/login'>Go to login page</a>\n          </Typography>\n        </Paper>\n      )\n    }\n  }, [currentUser])\n\n  // this code gets rid of the flash of 'you are not logged in' while still loading the logged in user\n  if (props.loading) {\n    return (<></>)\n  }\n  else {\n    return (\n      <>\n        <h5 className='text-center'>The below paragraph changes depending on whether a user is currently logged in.</h5>\n        {loginStatus}\n      </>\n    )\n  }\n}","import React, { useState, useEffect } from 'react';\nimport { setCurrentUser, selectCurrentUser } from './redux/userSlice';\nimport { selectClasses, selectLoadingClasses, setClasses } from './redux/classSlice';\nimport { useSelector, useDispatch } from 'react-redux';\nimport Login from './components/LoginSignupPages/Login';\nimport Signup from './components/LoginSignupPages/Signup';\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport axios from 'axios';\nimport Home from './components/Home';\nimport FourOhFour from './components/FourOhFour';\nimport ProtectedRoute from './components/ProtectedRoute';\nimport LoginStatus from './components/LoginStatus';\nimport { withStyles } from '@material-ui/core/styles';\n\n// styles are passed as props to App\nconst styles = {\n  form: {\n    display: 'flex',\n    alignItems: 'baseline',\n    justifyContent: 'space-evenly'\n  },\n  formRow: {\n    display: 'flex',\n    justifyContent: 'center'\n  }\n}\n\n\nexport default withStyles(styles)(function App(props) {\n  const dispatch = useDispatch();\n  const [loading, setLoading] = useState(true)\n  let currentUser = useSelector(selectCurrentUser);\n  const { classes } = props;\n  const loadingClasses = useSelector(selectLoadingClasses);\n\n  // upon route switch, gets user info if already logged in (otherwise redux store state is reset to initial value on page reload)\n  useEffect(() => {\n    // get user login info, then set redux state. loading is true until login info is retrieved\n    axios.get(\"/api/userdata\").then(({ data }) => {\n      if (data) {\n        dispatch(setCurrentUser(data));\n      }\n      setLoading(false);\n    }).catch(err => {\n      console.error(err);\n    })\n    // according to redux docs, dispatch function identity is stable and therefore doesn't need to be included in dependencies\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [])\n\n  // the App will not render until the dispatch is successful\n  useEffect(() => {\n    console.log(classes);\n    console.log(loadingClasses)\n    dispatch(setClasses(classes));\n  }, [classes])\n\n\n  return loadingClasses ? (<></>) : (\n    <div className=\"App\">\n      <Router>\n        <Switch>\n\n          {/* Home component only reachable if user is logged in. */}\n          <ProtectedRoute exact path=\"/\" user={currentUser} isLoading={loading} onFailureRedirectToPath=\"/login\">\n            <Home />\n          </ProtectedRoute>\n\n          <Route exact path='/login'>\n            <Login />\n          </Route>\n\n          <Route exact path='/signup'>\n            <Signup />\n          </Route>\n\n          <Route exact path='/loginstatus'>\n            <LoginStatus loading={loading}/>\n          </Route>\n\n          {/* Any path not listed above returns 404 */}\n          <Route path='/'>\n            <FourOhFour />\n          </Route>\n\n        </Switch>\n      </Router>\n    </div>\n  );\n})","import { configureStore } from '@reduxjs/toolkit';\nimport userReducer from './userSlice';\nimport classReducer from './classSlice';\n\nexport default configureStore({\n  reducer: {\n    class: classReducer,\n    user: userReducer,\n  }\n});\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './assets/css-output/output.css';\nimport store from './redux/store';\nimport { Provider } from 'react-redux';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n    <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}